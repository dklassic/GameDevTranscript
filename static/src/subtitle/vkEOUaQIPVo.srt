1
00:00:00,214 --> 00:00:03,897
那我們今天五月底分享會第二場

2
00:00:03,897 --> 00:00:11,522
就邀請到這個Unity Taiwan的代表

3
00:00:11,522 --> 00:00:13,844
校長先壯中

4
00:00:13,844 --> 00:00:17,826
來介紹就是其實他在大概三個月有整理一份

5
00:00:17,826 --> 00:00:19,127
我覺得蠻不錯的技術文件

6
00:00:19,127 --> 00:00:24,051
然後是講就是如何用

7
00:00:24,051 --> 00:00:26,092
對執行效能做扣上非常低的方式來

8
00:00:29,860 --> 00:00:32,042
他是有一個小小的故事

9
00:00:32,042 --> 00:00:34,023
是去年TGTF發生的

10
00:00:34,023 --> 00:00:35,805
好 那就請Kevin掌聲鼓勵

11
00:00:35,805 --> 00:00:38,247
請到Kevin介紹

12
00:00:38,247 --> 00:00:40,328
因為去年TGTF我遇到

13
00:00:40,328 --> 00:00:42,470
就是我們是會有Party嘛

14
00:00:42,470 --> 00:00:44,271
然後在那邊吃東西

15
00:00:44,271 --> 00:00:47,053
然後我就遇到那個閃電戰機的

16
00:00:47,053 --> 00:00:49,255
那個兩兄弟嘛

17
00:00:49,255 --> 00:00:49,475
林...

18
00:00:49,475 --> 00:00:51,377
玉... 玉正啊

19
00:00:51,377 --> 00:00:54,119
然後我們就聊

20
00:00:54,119 --> 00:00:56,060
然後我就跟他講說那個閃電戰機

21
00:00:56,060 --> 00:00:57,801
接下來要出的內容大概是

22
00:00:59,401 --> 00:01:02,402
然後我們就聊 我就跟他講說

23
00:01:02,402 --> 00:01:03,962
你有沒有想要嘗試過用那個360來做

24
00:01:03,962 --> 00:01:07,303
其實天馬行空講了一個idea

25
00:01:07,303 --> 00:01:09,843
然後他就說沒有想過

26
00:01:09,843 --> 00:01:13,364
然後我就給他看那個360的一些資料給他看

27
00:01:13,364 --> 00:01:15,925
然後他最後還是覺得好像不太明白我要說什麼

28
00:01:15,925 --> 00:01:19,706
然後我就說這樣子吧 我做個demo給你看看

29
00:01:19,706 --> 00:01:21,426
然後呢 就過一年了

30
00:01:21,426 --> 00:01:24,787
然後我就

31
00:01:24,787 --> 00:01:25,887
就忘記了啊

32
00:01:25,887 --> 00:01:28,608
然後原本我想做這件事情

33
00:01:28,608 --> 00:01:28,628
因為

34
00:01:29,661 --> 00:01:31,462
Unity還沒有支援

35
00:01:31,462 --> 00:01:32,883
把場景拍成在那邊

36
00:01:32,883 --> 00:01:34,325
所以要第三方套件

37
00:01:34,325 --> 00:01:35,986
所以我就後來就想說

38
00:01:35,986 --> 00:01:37,947
等吧 因為我知道我們公司在做

39
00:01:37,947 --> 00:01:40,209
等到那個版本出來的時候我再用就好了

40
00:01:40,209 --> 00:01:41,010
也不急

41
00:01:41,010 --> 00:01:43,752
反正他應該也能等

42
00:01:43,752 --> 00:01:44,452
然後呢

43
00:01:44,452 --> 00:01:46,774
就後來我就等功能出來之後

44
00:01:46,774 --> 00:01:48,475
我就上個月剛好

45
00:01:48,475 --> 00:01:49,556
大概三個月前吧

46
00:01:49,556 --> 00:01:52,338
因為我們要開始準備Unite的講題嘛

47
00:01:52,338 --> 00:01:53,759
我想說那我們來做這個好了

48
00:01:53,759 --> 00:01:55,100
所以我就開始著手

49
00:01:56,033 --> 00:01:57,774
然後先把內容做出來

50
00:01:57,774 --> 00:01:59,535
然後整理資料之後

51
00:01:59,535 --> 00:02:02,117
我們還可以在公司內部審核進去

52
00:02:02,117 --> 00:02:04,458
然後有發生一些還蠻有趣的事情

53
00:02:04,458 --> 00:02:06,319
等一下可以跟各位講一下

54
00:02:06,319 --> 00:02:10,321
那因為想說要做給他們看

55
00:02:10,321 --> 00:02:12,803
所以我當然是先選那種設計遊戲

56
00:02:12,803 --> 00:02:15,304
設計遊戲當作翻譯嘛

57
00:02:15,304 --> 00:02:20,307
因為有一個標準的demo教學用

58
00:02:20,307 --> 00:02:22,808
所以我就把這個翻譯拿過來

59
00:02:22,808 --> 00:02:25,150
然後嘗試著先用

60
00:02:25,784 --> 00:02:28,405
一個不一樣的環境

61
00:02:28,405 --> 00:02:30,025
做成一個背景

62
00:02:30,025 --> 00:02:31,105
然後這個背景呢

63
00:02:31,105 --> 00:02:33,626
是以影片的方式在後面播

64
00:02:33,626 --> 00:02:35,006
但這一次這一版的時候

65
00:02:35,006 --> 00:02:37,107
這個影片的方式是用那個屏的

66
00:02:37,107 --> 00:02:39,787
所以實際上它的感覺就是

67
00:02:39,787 --> 00:02:41,428
還OK可是不是我要的

68
00:02:41,428 --> 00:02:44,409
因為它那個就好比是你從

69
00:02:44,409 --> 00:02:45,529
背面放的板子一樣

70
00:02:45,529 --> 00:02:47,969
可是它這個測試達到一個標準的結果

71
00:02:47,969 --> 00:02:49,470
就是它桌布很低啦

72
00:02:49,470 --> 00:02:51,510
因為它背後沒有任何的

73
00:02:51,510 --> 00:02:52,831
沒有任何的模型嘛

74
00:02:52,831 --> 00:02:53,551
所以它標準很低

75
00:02:58,890 --> 00:03:02,311
然後我再用那個

76
00:03:02,311 --> 00:03:05,313
USB 2018新的API來轟

77
00:03:05,313 --> 00:03:08,034
轟完之後就可以做一些比較不一樣的事情

78
00:03:08,034 --> 00:03:11,255
就是轟完之後它是一個360的場景

79
00:03:11,255 --> 00:03:13,877
所以這個時候其實鏡頭是可以360度旋轉

80
00:03:13,877 --> 00:03:17,098
但是因為射擊遊戲它盡量是往前看就好

81
00:03:17,098 --> 00:03:21,240
所以我就只是把它鎖在大概前面60度左右可以轉

82
00:03:21,240 --> 00:03:23,301
它會一直盯著那個飛機

83
00:03:23,301 --> 00:03:25,082
所以飛機在動的時候它會跟著飛機轉

84
00:03:25,082 --> 00:03:25,942
但是因為場景是360度

85
00:03:27,970 --> 00:03:30,511
所以當然會讓你感覺說它還蠻順的

86
00:03:30,511 --> 00:03:34,552
然後這個桌扣也是大概就24、25左右

87
00:03:34,552 --> 00:03:36,692
那做完這個DEMO之後呢

88
00:03:36,692 --> 00:03:38,332
我稍微玩了一下

89
00:03:38,332 --> 00:03:39,753
然後呢

90
00:03:39,753 --> 00:03:40,513
還不錯

91
00:03:40,513 --> 00:03:42,493
可是它還是蠻多限制的

92
00:03:42,493 --> 00:03:44,793
所以我就跟我們同事聊了一下

93
00:03:44,793 --> 00:03:46,674
這個內部的一些機制

94
00:03:46,674 --> 00:03:47,914
然後他就建議我就是說

95
00:03:47,914 --> 00:03:50,875
可以嘗試著去做一些製造

96
00:03:50,875 --> 00:03:53,555
所以先給各位看一下

97
00:03:53,555 --> 00:03:54,715
這360的照片大概是會長怎麼樣

98
00:03:55,694 --> 00:03:59,396
所以實際上是個圓球包在整個場景

99
00:03:59,396 --> 00:04:01,136
所以你的鏡頭在中間嘛

100
00:04:01,136 --> 00:04:02,677
然後飛機在你的前面

101
00:04:02,677 --> 00:04:06,419
所以正常的流程就是按照剛剛那個Space Shooter飛機會衝過來

102
00:04:06,419 --> 00:04:08,259
然後這整個路線呢

103
00:04:08,259 --> 00:04:11,581
我在錄的時候就是已經有安排好我要怎麼飛

104
00:04:11,581 --> 00:04:14,082
所以要怎麼飛這件事情其實是錄好了

105
00:04:14,082 --> 00:04:17,803
然後它錄完之後就會變成一個會動的影片

106
00:04:17,803 --> 00:04:20,104
應該說是影片但是是360的影片

107
00:04:20,104 --> 00:04:22,385
大家可以給各位看一下場景

108
00:04:25,594 --> 00:04:27,856
它就是一個很大的圓球

109
00:04:27,856 --> 00:04:29,897
這個圓球其實多大小沒有關係

110
00:04:29,897 --> 00:04:35,342
然後呢原本的飛機在這裡

111
00:04:35,342 --> 00:04:37,063
它開始撥的時候呢

112
00:04:37,063 --> 00:04:38,184
材質才會去轉

113
00:04:38,184 --> 00:04:40,846
就是一開始其實材質沒被貼上去

114
00:04:40,846 --> 00:04:42,547
開始撥之後我才會把材質

115
00:04:42,547 --> 00:04:44,068
慢慢慢慢貼上去

116
00:04:44,068 --> 00:04:45,549
然後它會一直不斷的去注意

117
00:04:45,549 --> 00:04:47,351
所以整體上來說

118
00:04:47,351 --> 00:04:48,291
實際上那個石頭還有飛機

119
00:04:48,291 --> 00:04:50,773
它還是3D模型

120
00:04:50,773 --> 00:04:52,535
特效還是3D的特效

121
00:04:52,535 --> 00:04:54,836
但實際上它後面看到的這一圈

122
00:04:54,836 --> 00:04:55,016
就是

123
00:04:56,689 --> 00:04:58,049
一個圓球

124
00:04:58,049 --> 00:05:01,511
然後這個圓球是用Video Player去播的

125
00:05:01,511 --> 00:05:04,452
那你只要站到圓球的正中心的時候

126
00:05:04,452 --> 00:05:07,553
它就會還原到當初那個

127
00:05:07,553 --> 00:05:10,894
一開始拍的位置

128
00:05:10,894 --> 00:05:15,816
那我錄了大概是30秒

129
00:05:15,816 --> 00:05:16,796
然後呢代價蠻大的

130
00:05:16,796 --> 00:05:20,038
大概是100美金

131
00:05:20,038 --> 00:05:23,499
所以我的同事跟我講說

132
00:05:23,499 --> 00:05:25,280
現在這個環節如果你要把影片放進來

133
00:05:29,226 --> 00:05:32,407
然後未來的話要解決這種方式就是要變成

134
00:05:32,407 --> 00:05:36,569
Unity的那個可以做Streaming的API出來之後

135
00:05:36,569 --> 00:05:38,010
影片可以做串流的時候

136
00:05:38,010 --> 00:05:41,211
你就可以解決這個問題

137
00:05:41,211 --> 00:05:45,393
那這個之外呢 我還做了另外一個就是

138
00:05:45,393 --> 00:05:47,294
遮罩

139
00:05:47,294 --> 00:05:48,734
所以這個遮罩呢

140
00:05:48,734 --> 00:05:49,575
我們來看一下那個圖表

141
00:05:49,575 --> 00:05:49,655
看一下

142
00:05:49,655 --> 00:05:50,295
兩個API

143
00:05:50,295 --> 00:05:57,238
第一個API是Camera Render to QMAC

144
00:05:57,773 --> 00:05:59,074
所以現在等於是說

145
00:05:59,074 --> 00:06:02,977
你從鏡頭可以拍一張CubeMate

146
00:06:02,977 --> 00:06:03,257
靜態或動態

147
00:06:03,257 --> 00:06:05,199
拍成單張或拍成影片

148
00:06:05,199 --> 00:06:07,821
但這CubeMate只能拿來當作Skybox

149
00:06:07,821 --> 00:06:09,382
所以它還沒辦法變成動態

150
00:06:09,382 --> 00:06:11,684
但是你可以把它縫合

151
00:06:11,684 --> 00:06:13,585
用另外一個API把它縫起來

152
00:06:13,585 --> 00:06:15,967
所以如果你本身是

153
00:06:15,967 --> 00:06:16,688
有買那種360

154
00:06:16,688 --> 00:06:18,989
比較專業的六支鏡頭那種

155
00:06:18,989 --> 00:06:21,751
其實那種鏡頭拍完之後

156
00:06:21,751 --> 00:06:22,332
縫合軟體要淺

157
00:06:22,332 --> 00:06:23,973
其實音樂體現在提供這個

158
00:06:24,923 --> 00:06:27,425
這個新的API其實可以拿來封

159
00:06:27,425 --> 00:06:28,565
等於是你餵六張圖給他

160
00:06:28,565 --> 00:06:30,667
餵一張Cue Map給他之後

161
00:06:30,667 --> 00:06:32,028
他會幫你把它封成長這個樣子

162
00:06:32,028 --> 00:06:34,729
把它封成長這個樣子

163
00:06:34,729 --> 00:06:36,070
所以我這個場景是用那個

164
00:06:36,070 --> 00:06:38,692
Blocksmiths那一個場景

165
00:06:38,692 --> 00:06:42,395
然後把所有的特效通通把它打開

166
00:06:42,395 --> 00:06:43,856
就是開到緊繃這樣子

167
00:06:43,856 --> 00:06:45,337
LOD把它全關掉

168
00:06:45,337 --> 00:06:47,138
然後去錄

169
00:06:47,138 --> 00:06:50,100
錄一個4K的影片

170
00:06:50,100 --> 00:06:50,940
所以實際上

171
00:06:50,940 --> 00:06:52,942
如果你用一般的播放器來播的話

172
00:06:52,942 --> 00:06:53,142
它會長這個樣子

173
00:06:54,383 --> 00:06:56,845
但是如果他縫進圓球之後

174
00:06:56,845 --> 00:06:59,447
你那個camera在正中心的時候

175
00:06:59,447 --> 00:07:03,069
就等於是還原當初你拍的那個路徑

176
00:07:03,069 --> 00:07:04,650
那因為他是1比1的

177
00:07:04,650 --> 00:07:05,471
隔路

178
00:07:05,471 --> 00:07:07,872
他那個可以做到隔路

179
00:07:07,872 --> 00:07:09,673
所以就可以說

180
00:07:09,673 --> 00:07:10,734
實際上你電腦很爛沒關係

181
00:07:10,734 --> 00:07:13,756
他可以最後錄起來還是一個很順很順的影片

182
00:07:13,756 --> 00:07:15,217
把這個球包起來

183
00:07:15,217 --> 00:07:16,858
就還原回去

184
00:07:16,858 --> 00:07:17,939
原本我是用API的

185
00:07:17,939 --> 00:07:18,919
但是我同事建議我說

186
00:07:18,919 --> 00:07:20,080
可以不要用API

187
00:07:20,080 --> 00:07:22,061
因為他們已經寫成那個套件

188
00:07:22,061 --> 00:07:22,281
而且把

189
00:07:23,159 --> 00:07:25,780
這個功能把它跟TimeLapse綁定在一起

190
00:07:25,780 --> 00:07:29,342
所以我的整個錄製過程就是把

191
00:07:29,342 --> 00:07:30,683
這個套件

192
00:07:30,683 --> 00:07:32,023
告訴它說我要幾幀

193
00:07:32,023 --> 00:07:32,143
錄到幾幀

194
00:07:32,143 --> 00:07:35,685
然後我Play之後我就去做別的事情

195
00:07:35,685 --> 00:07:40,027
大概花了20分鐘把

196
00:07:40,027 --> 00:07:40,887
30秒的

197
00:07:40,887 --> 00:07:42,288
場景錄完

198
00:07:42,288 --> 00:07:43,749
然後再回來看

199
00:07:43,749 --> 00:07:45,009
然後它的設定在這邊

200
00:07:45,009 --> 00:07:47,711
比較需要注意到的就是

201
00:07:47,711 --> 00:07:49,531
它可以錄成照片

202
00:07:49,531 --> 00:07:51,132
所以它可以錄成照片大壓法

203
00:07:52,265 --> 00:07:54,326
但是它不能錄影片打雅房

204
00:07:54,326 --> 00:07:56,128
所以這邊的處理呢

205
00:07:56,128 --> 00:07:58,550
我後面會做一些不一樣的處理

206
00:07:58,550 --> 00:07:59,311
所以它可以看到

207
00:07:59,311 --> 00:08:01,633
你可以看到Output可以是PNG

208
00:08:01,633 --> 00:08:03,855
然後也可以是MP4

209
00:08:03,855 --> 00:08:04,695
兩個不同

210
00:08:04,695 --> 00:08:05,556
那我就是把那個

211
00:08:05,556 --> 00:08:08,499
Recorded Track

212
00:08:08,499 --> 00:08:09,039
把它放進來

213
00:08:09,039 --> 00:08:10,220
打開的時候它就會錄

214
00:08:10,220 --> 00:08:13,022
沒打開的時候就是我Debug的時候

215
00:08:13,022 --> 00:08:16,205
然後它的路線呢

216
00:08:16,205 --> 00:08:17,386
畫面上那綠色的

217
00:08:17,386 --> 00:08:19,768
就是我安排的一個Dolly Track路線

218
00:08:20,466 --> 00:08:26,508
到時候鏡頭就會這樣飛下去

219
00:08:26,508 --> 00:08:27,809
PBS的話是全開的

220
00:08:27,809 --> 00:08:29,989
因為既然是預烘焙

221
00:08:29,989 --> 00:08:32,950
所以就不需要去管特效

222
00:08:32,950 --> 00:08:35,791
因為你假設說今天這個東西要放在手機上

223
00:08:35,791 --> 00:08:37,092
那你本來就不應該開東西

224
00:08:37,092 --> 00:08:38,772
現在就可以全開

225
00:08:38,772 --> 00:08:41,613
可是必須要注意到的是

226
00:08:41,613 --> 00:08:44,034
有一些Post-Positing

227
00:08:44,034 --> 00:08:44,694
裡面的效果

228
00:08:44,694 --> 00:08:47,455
有一些是針對Screen Space

229
00:08:47,455 --> 00:08:49,016
就是針對畫面

230
00:08:49,016 --> 00:08:49,236
所以

231
00:08:49,776 --> 00:08:51,577
實際上拍的時候是六支鏡頭拍一張照片

232
00:08:51,577 --> 00:08:52,658
所以等於是六個畫面

233
00:08:52,658 --> 00:08:55,259
六個畫面縫成一個Cue Map

234
00:08:55,259 --> 00:08:58,522
然後再把這個Cue Map縫合成一個全景圖

235
00:08:58,522 --> 00:09:00,863
所以如果那一種特效的話就不適合

236
00:09:00,863 --> 00:09:04,306
因為它是把每一張畫面的邊框

237
00:09:04,306 --> 00:09:05,967
可能都會做一些處理

238
00:09:05,967 --> 00:09:07,228
所以縫起來就會有問題

239
00:09:07,228 --> 00:09:10,410
所以大概有兩個特效不能用

240
00:09:10,410 --> 00:09:12,752
其他其實都是可以用

241
00:09:12,752 --> 00:09:13,452
然後效果還不錯

242
00:09:13,452 --> 00:09:16,354
所以你可以在這邊做第一層AA

243
00:09:16,354 --> 00:09:17,976
然後實際上放進手機以後

244
00:09:17,976 --> 00:09:19,237
覺得不夠再做第二次

245
00:09:19,714 --> 00:09:21,475
也可以

246
00:09:21,475 --> 00:09:22,596
然後LOD

247
00:09:22,596 --> 00:09:24,036
我在烘的時候LOD忘記關

248
00:09:24,036 --> 00:09:26,317
所以你可以看到遠處會有一條線

249
00:09:26,317 --> 00:09:28,899
慢慢的斬草

250
00:09:28,899 --> 00:09:30,119
但是實際上是

251
00:09:30,119 --> 00:09:31,300
再重換的話把LOD關掉就好

252
00:09:31,300 --> 00:09:34,761
LOD然後還有像什麼Acoustic Collar

253
00:09:34,761 --> 00:09:36,282
遮擋也全部都不要用

254
00:09:36,282 --> 00:09:39,644
等於是說在烘焙週期的時候

255
00:09:39,644 --> 00:09:41,965
節省效能的功能通通不要用

256
00:09:41,965 --> 00:09:45,046
因為烘的時候就是要全開

257
00:09:45,046 --> 00:09:45,647
然後

258
00:09:45,647 --> 00:09:47,708
再來就是遮擋

259
00:09:47,708 --> 00:09:49,008
遮擋的話因為比較特別一點

260
00:09:49,745 --> 00:09:51,666
可以看一下這個

261
00:09:51,666 --> 00:09:57,169
既然它是影片

262
00:09:57,169 --> 00:09:59,650
實際上我的鏡頭是從頭到尾都沒動

263
00:09:59,650 --> 00:10:01,131
但是我飛機物件在動的時候

264
00:10:01,131 --> 00:10:01,771
我想要穿過

265
00:10:01,771 --> 00:10:06,553
我想要穿過底下那個橋的時候

266
00:10:06,553 --> 00:10:10,235
這不會是喔

267
00:10:10,235 --> 00:10:10,775
它會穿過去

268
00:10:17,407 --> 00:10:20,009
那在這個角度的時候看 其實是還OK啦

269
00:10:20,009 --> 00:10:22,490
可是你會發現到 它其實是兩層

270
00:10:22,490 --> 00:10:25,312
喔 對 它其實是兩層

271
00:10:25,312 --> 00:10:29,115
所以呢 原則上就是兩層影片

272
00:10:29,115 --> 00:10:33,559
但是流程對的話 它可以疊得天衣無縫

273
00:10:33,559 --> 00:10:34,539
而且流程也是蠻簡單的

274
00:10:34,539 --> 00:10:36,661
所以這個邏輯就是說

275
00:10:36,661 --> 00:10:37,562
當我的鏡頭在那個定點的話

276
00:10:55,406 --> 00:10:57,667
我的鏡頭在那個圓心的時候啊

277
00:10:57,667 --> 00:11:04,988
其實這兩個圖是疊起來的

278
00:11:04,988 --> 00:11:06,349
它是疊起來的

279
00:11:06,349 --> 00:11:07,389
所以這個時候我

280
00:11:07,389 --> 00:11:09,050
我可以把它做排序

281
00:11:09,050 --> 00:11:10,670
可以做order

282
00:11:10,670 --> 00:11:12,630
那它是怎麼做的呢

283
00:11:12,630 --> 00:11:17,792
原則上它一樣是用那個recorder來錄的

284
00:11:17,792 --> 00:11:17,932
只不過說

285
00:11:17,932 --> 00:11:20,793
錄的時候你不需要去做太多處理

286
00:11:20,793 --> 00:11:23,053
第一個你就是先把

287
00:11:23,053 --> 00:11:23,573
你先把那個

288
00:11:24,535 --> 00:11:29,259
你要放在前面的東西先把它設定到一個Layer

289
00:11:29,259 --> 00:11:31,701
就是把它獨立成一層就好

290
00:11:31,701 --> 00:11:33,742
然後你到Camera那邊去

291
00:11:33,742 --> 00:11:35,263
因為Camera它可以做Coloring嘛

292
00:11:35,263 --> 00:11:37,665
所以就可以設定說我只顯示這一層就好

293
00:11:37,665 --> 00:11:39,767
所以其他東西都不見了

294
00:11:39,767 --> 00:11:41,448
然後我再把背景設為綠色

295
00:11:41,448 --> 00:11:45,571
因為剛有提到就是Recorder輸出的時候沒辦法帶Alpha

296
00:11:45,571 --> 00:11:48,233
所以雖然Unity有支援Alpha的影片

297
00:11:48,233 --> 00:11:49,574
有兩種格式

298
00:11:49,574 --> 00:11:51,135
但是在這個案例裡面呢

299
00:11:51,135 --> 00:11:52,996
那兩種格式其實佔了一點空間

300
00:11:53,821 --> 00:11:56,543
那他還要多一個 8bit 的 Alpha Channel

301
00:11:56,543 --> 00:11:58,245
所以那個格式就不太適合

302
00:11:58,245 --> 00:12:01,167
所以我在這邊的處理方式是用 Key 的方式

303
00:12:01,167 --> 00:12:02,888
那我就是把背景色為綠色

304
00:12:02,888 --> 00:12:05,450
所以等於是說他在 Render 出來的時候

305
00:12:05,450 --> 00:12:07,552
他沒有去畫其他的東西

306
00:12:07,552 --> 00:12:09,834
就只畫那一層加背景綠色

307
00:12:09,834 --> 00:12:16,119
最後輸出來就會變成一個一模一樣的東西

308
00:12:16,119 --> 00:12:19,222
最後輸出就會長

309
00:12:19,222 --> 00:12:19,422
就這個樣子

310
00:12:20,179 --> 00:12:21,700
就是全部都是綠色的

311
00:12:21,700 --> 00:12:24,221
但是只有橋是有物件

312
00:12:24,221 --> 00:12:25,622
然後再把它包回圓球之後

313
00:12:25,622 --> 00:12:27,583
放在同一個圓心點

314
00:12:27,583 --> 00:12:29,385
它會完美的疊合

315
00:12:29,385 --> 00:12:32,046
然後你也即時分辨不出來

316
00:12:32,046 --> 00:12:36,129
這時候飛機從兩個球體中間飛過去的時候

317
00:12:36,129 --> 00:12:37,430
就是剛剛的效果

318
00:12:37,430 --> 00:12:39,211
那你本身飛機是3D物件嘛

319
00:12:39,211 --> 00:12:44,215
所以你就可以去做一些有互動的元素

320
00:12:44,215 --> 00:12:46,536
然後橋在前面它會擋住

321
00:12:46,536 --> 00:12:47,257
就會造成剛剛的這個結果

322
00:12:50,722 --> 00:12:54,143
然後就蠻簡單的

323
00:12:54,143 --> 00:12:59,325
那我就後來就把這個結果我就給兩兄弟了

324
00:12:59,325 --> 00:13:00,986
我說OK我大概做到這樣子

325
00:13:00,986 --> 00:13:05,307
然後好像你們可以先看看這個東西到底能幫助

326
00:13:05,307 --> 00:13:09,569
然後接下來有問題可以我們再繼續做demo

327
00:13:09,569 --> 00:13:10,969
還蠻開心的

328
00:13:10,969 --> 00:13:12,270
但是做完之後呢

329
00:13:12,270 --> 00:13:14,631
我就想到說其實還有東西可以做

330
00:13:14,631 --> 00:13:15,471
第一個這個是影片

331
00:13:22,836 --> 00:13:26,397
以往的話,我之前有一個demo

332
00:13:26,397 --> 00:13:30,718
是真實360場景,去拍一張360場景之後

333
00:13:30,718 --> 00:13:32,919
怎麼樣在這360場景裡面

334
00:13:32,919 --> 00:13:38,701
去放3D物件,然後可以做一些遮擋的東西

335
00:13:38,701 --> 00:13:43,123
這是原本,這也是很久以前做的

336
00:13:43,123 --> 00:13:44,123
就是變成像這樣

337
00:13:44,123 --> 00:13:46,784
這是一張照片

338
00:13:46,784 --> 00:13:48,285
影片也可以啦

339
00:13:48,285 --> 00:13:50,746
這是一張照片,但是我希望就是這一個鏡頭呢

340
00:13:53,288 --> 00:13:56,931
我上面的3D物件走到這個台階

341
00:13:56,931 --> 00:13:59,392
它必須要被遮到

342
00:13:59,392 --> 00:14:03,735
所以當初這個案例是為了研究怎麼在

343
00:14:03,735 --> 00:14:06,156
我們所謂的全景照片裡面去

344
00:14:06,156 --> 00:14:08,118
跟3D物件疊合在一起

345
00:14:08,118 --> 00:14:17,543
所以這個可以看一下

346
00:14:17,543 --> 00:14:19,665
有沒有 也是一堆奇怪的圖

347
00:14:19,665 --> 00:14:20,585
就是你完全逗不起來

348
00:14:21,200 --> 00:14:27,385
但是它有一個規則可以把它變成是一個可以執行的東西

349
00:14:27,385 --> 00:14:29,707
所以原本是這個專案

350
00:14:29,707 --> 00:14:33,310
但是這個專案就是一張圖一個環境

351
00:14:33,310 --> 00:14:36,773
可是我遇到很多客戶他希望是比較複雜一點

352
00:14:36,773 --> 00:14:39,755
所以可能是一個房間

353
00:14:39,755 --> 00:14:42,217
有一個房子有好多房間

354
00:14:42,217 --> 00:14:45,340
他希望每個房間都會有不一樣的結果

355
00:14:45,340 --> 00:14:47,602
所以我就把

356
00:14:47,602 --> 00:14:48,783
接下來就繼續做這件事情

357
00:14:50,643 --> 00:14:52,864
好多房間 用一樣的技術

358
00:14:52,864 --> 00:14:58,806
所以現在看到的是每一個房間是一個照片

359
00:14:58,806 --> 00:15:00,286
一個背景加一個前景

360
00:15:00,286 --> 00:15:02,166
所以一個背景加一個前景

361
00:15:02,166 --> 00:15:05,707
然後它走過去的時候會切到另外一個

362
00:15:05,707 --> 00:15:08,648
鏡頭加另外一個360照片

363
00:15:08,648 --> 00:15:10,268
所以總共有多少張

364
00:15:10,268 --> 00:15:13,509
多少個環境就有多少張照片

365
00:15:13,509 --> 00:15:17,610
但是它可以做到還不錯的效果

366
00:15:17,610 --> 00:15:18,490
這個時候還沒有影子

367
00:15:18,490 --> 00:15:20,271
可是其實我影子已經後來有做了

368
00:15:20,928 --> 00:15:25,590
然後你可以看到這邊可以有分前面有沒有遮跟後面有遮

369
00:15:25,590 --> 00:15:27,711
可以做一些額外的處理

370
00:15:27,711 --> 00:15:28,611
可以做一些額外的處理

371
00:15:28,611 --> 00:15:31,232
比如說像這個椅子這邊

372
00:15:31,232 --> 00:15:35,034
P4維持在惡靈古堡

373
00:15:35,034 --> 00:15:38,655
這個其實我後來查這種類型的遊戲真的很少

374
00:15:38,655 --> 00:15:41,676
第一個就是最久最久的鬼屋魔椅

375
00:15:41,676 --> 00:15:42,797
鬼屋魔椅是這個

376
00:15:42,797 --> 00:15:44,638
再來就是Town of Seven

377
00:15:44,638 --> 00:15:46,959
再來就沒有了 好像就沒有了

378
00:15:46,959 --> 00:15:48,019
就是像

379
00:15:48,019 --> 00:15:49,580
惡靈古堡也算

380
00:15:50,232 --> 00:15:53,494
然後比如說像Nier好了

381
00:15:53,494 --> 00:15:56,076
Nier的話它是鏡頭還會動鏡頭還會動

382
00:15:56,076 --> 00:15:57,317
所以鏡頭定住了沒有

383
00:15:57,317 --> 00:16:00,199
但是這種流程

384
00:16:00,199 --> 00:16:02,840
它有一個致命傷就是鏡頭只能轉

385
00:16:02,840 --> 00:16:04,581
不能動

386
00:16:04,581 --> 00:16:05,002
鏡頭只能轉不能動

387
00:16:05,002 --> 00:16:08,404
所以任何只要是鏡頭可以不動的遊戲類型

388
00:16:08,404 --> 00:16:10,765
其實還蠻適合這個案例的

389
00:16:10,765 --> 00:16:16,649
然後可以給各位看一下

390
00:16:16,649 --> 00:16:17,650
這個是

391
00:16:17,650 --> 00:16:19,050
上面是CPU嘛

392
00:16:19,050 --> 00:16:19,751
底下是GAMING

393
00:16:20,205 --> 00:16:22,347
那我把它拉開之後你可以看到

394
00:16:22,347 --> 00:16:26,050
其實這個場景是沒有任何的場景

395
00:16:26,050 --> 00:16:30,733
就是一個碰撞結構

396
00:16:30,733 --> 00:16:33,175
所以現在各位可以看到就是說

397
00:16:33,175 --> 00:16:35,796
當我Play下去的時候呢

398
00:16:35,796 --> 00:16:40,220
它有點像是眼睛被一層Capture包住了

399
00:16:40,220 --> 00:16:42,942
但是這個碰撞結構實際上是存在的

400
00:16:42,942 --> 00:16:46,464
所以我可以做到有碰撞結構

401
00:16:46,464 --> 00:16:48,145
那我就是最後一個禮拜的時間

402
00:16:54,069 --> 00:16:55,570
產生影子跟光

403
00:16:55,570 --> 00:16:58,431
現在這光是沒有的吧

404
00:16:58,431 --> 00:17:01,653
我把它關掉

405
00:17:01,653 --> 00:17:04,494
所以影子其實是打在虛擬的

406
00:17:04,494 --> 00:17:07,155
就是虛的3D結構上

407
00:17:07,155 --> 00:17:08,936
對 但是因為虛的3D結構

408
00:17:08,936 --> 00:17:12,718
沒辦法Runtime去產生

409
00:17:12,718 --> 00:17:15,019
因為沒有一個平板去接

410
00:17:15,019 --> 00:17:18,120
所以實際上我是用一個假的平板在底下

411
00:17:18,120 --> 00:17:20,101
去接那個影子

412
00:17:20,101 --> 00:17:20,461
讓它產生出來

413
00:17:21,175 --> 00:17:22,576
而且可以做到有點半透明

414
00:17:22,576 --> 00:17:25,859
所以就可以好像透回去底下那層Texture

415
00:17:25,859 --> 00:17:27,440
讓你以為地板就在那邊

416
00:17:27,440 --> 00:17:28,441
可是實際上

417
00:17:28,441 --> 00:17:29,702
地板它是個圓球

418
00:17:29,702 --> 00:17:32,044
可是像現在你如果站在那個位置的話

419
00:17:32,044 --> 00:17:34,266
它的影子會從地板再延伸到牆上

420
00:17:34,266 --> 00:17:35,967
不會

421
00:17:35,967 --> 00:17:36,728
不會 實際上沒有

422
00:17:36,728 --> 00:17:38,669
影子會穿過去

423
00:17:38,669 --> 00:17:39,310
對 實際上是假象

424
00:17:39,310 --> 00:17:42,493
因為影子在那個貼圖前面

425
00:17:42,493 --> 00:17:43,533
所以呢

426
00:17:43,533 --> 00:17:45,575
這個時候你會覺得好像是對的

427
00:17:45,575 --> 00:17:47,637
但是其實到這裡的時候你會發現

428
00:17:47,637 --> 00:17:49,398
某一些地方是會有問題

429
00:17:49,398 --> 00:17:49,739
就是它不應該

430
00:17:51,007 --> 00:17:53,288
他不應該爬上去

431
00:17:53,288 --> 00:17:54,529
他過牆對

432
00:17:54,529 --> 00:17:57,051
所以某一些點你要額外特別處理

433
00:17:57,051 --> 00:17:59,072
但是就是說

434
00:17:59,072 --> 00:18:00,873
這個都是有點像是眼睛騙人

435
00:18:00,873 --> 00:18:04,436
就是有點像我們早期做遊戲就是很多東西都是作假

436
00:18:04,436 --> 00:18:05,737
欺騙你的眼睛

437
00:18:05,737 --> 00:18:08,399
但是因為隨著現在技術越來越簡單

438
00:18:08,399 --> 00:18:11,841
就變成說好那就是用硬體去ㄍㄧㄥ就對了

439
00:18:11,841 --> 00:18:14,062
那如果我們做這件事情主要就是說

440
00:18:14,062 --> 00:18:16,164
把它還原到可以最高效

441
00:18:16,164 --> 00:18:17,285
然後再把它提升起來

442
00:18:17,285 --> 00:18:19,066
開始再放3D物件回去

443
00:18:19,066 --> 00:18:19,746
再可能鑽場

444
00:18:20,369 --> 00:18:22,530
本來我當初是想說

445
00:18:22,530 --> 00:18:23,191
為了

446
00:18:23,191 --> 00:18:26,012
其實我把這個demo放回我們公司去的時候

447
00:18:26,012 --> 00:18:28,473
只有兩個部門特別有興趣

448
00:18:28,473 --> 00:18:29,414
第一個部門就是做這個

449
00:18:29,414 --> 00:18:32,015
prepack API的那個部門

450
00:18:32,015 --> 00:18:36,217
他會覺得說 哇賽 我寫的東西有人用了 好爽

451
00:18:36,217 --> 00:18:37,358
這以前都沒人用就對了

452
00:18:37,358 --> 00:18:38,339
對 他覺得說

453
00:18:38,339 --> 00:18:39,619
這個我發出去好像沒有什麼關係

454
00:18:39,619 --> 00:18:42,040
然後我就把這個給他看

455
00:18:42,040 --> 00:18:44,262
他說 哇賽 這個太棒了

456
00:18:44,262 --> 00:18:46,003
第二個是博弈

457
00:18:46,003 --> 00:18:47,023
博弈非常有興趣就跑來說

458
00:18:48,467 --> 00:18:49,388
這個東西我很想用

459
00:18:49,388 --> 00:18:51,889
因為博弈公司現在就是

460
00:18:51,889 --> 00:18:53,690
想要做很漂亮的畫面

461
00:18:53,690 --> 00:18:56,732
可是那個效能不好

462
00:18:56,732 --> 00:18:58,233
那博弈又剛好是可以坐著

463
00:18:58,233 --> 00:18:59,173
然後不用動

464
00:18:59,173 --> 00:19:00,974
就是機台在前面就好

465
00:19:00,974 --> 00:19:02,275
所以他們要求我們就是說

466
00:19:02,275 --> 00:19:03,676
看可不可以在

467
00:19:03,676 --> 00:19:06,537
未來的某一些時間裡面把

468
00:19:06,537 --> 00:19:09,599
幫他們做個 Demo

469
00:19:09,599 --> 00:19:11,140
那這個呢

470
00:19:11,140 --> 00:19:12,140
來說明一下大概會有什麼樣的內容

471
00:19:13,728 --> 00:19:15,689
首先就是它的原理

472
00:19:15,689 --> 00:19:17,210
它的原理就是

473
00:19:17,210 --> 00:19:19,712
用材質包住你的眼睛

474
00:19:19,712 --> 00:19:23,755
但是因為這個結構我要保留住

475
00:19:23,755 --> 00:19:24,936
好幾個房間不同的結構

476
00:19:24,936 --> 00:19:27,158
所以我必須要train一天的時間

477
00:19:27,158 --> 00:19:28,358
在一開始

478
00:19:28,358 --> 00:19:31,301
那個camera在拍這些360位置的時候

479
00:19:31,301 --> 00:19:32,722
都是已經定好

480
00:19:32,722 --> 00:19:33,342
如果你要移動

481
00:19:33,342 --> 00:19:35,704
你就必須要重拍一張

482
00:19:35,704 --> 00:19:37,965
或重拍一些你那種背景

483
00:19:37,965 --> 00:19:38,806
所以它就是第一個

484
00:19:38,806 --> 00:19:39,567
它鏡頭沒有動

485
00:19:39,567 --> 00:19:41,828
然後拍完之後鏡頭也不能動

486
00:19:42,641 --> 00:19:44,361
所以它的流程就很單純

487
00:19:44,361 --> 00:19:46,422
一開始也是請美術建模的

488
00:19:46,422 --> 00:19:47,342
然後呢

489
00:19:47,342 --> 00:19:47,582
這個是我從

490
00:19:47,582 --> 00:19:51,863
SSD上買了一個很漂亮的模型

491
00:19:51,863 --> 00:19:53,764
等於是說美術建模完之後呢

492
00:19:53,764 --> 00:19:56,104
我把七個鏡頭都擺好

493
00:19:56,104 --> 00:19:59,765
然後各拍一張背景圖

494
00:19:59,765 --> 00:20:01,306
拍完背景圖之後呢

495
00:20:01,306 --> 00:20:04,627
我把所有的Mesh Render都把它移掉

496
00:20:04,627 --> 00:20:06,827
所以所有的渲染的部分通通沒有

497
00:20:06,827 --> 00:20:08,047
就只剩下

498
00:20:08,047 --> 00:20:09,268
只剩下碰撞結構

499
00:20:09,268 --> 00:20:10,868
所以鏡頭的位置對了

500
00:20:10,868 --> 00:20:11,588
碰撞結構本來就存在

501
00:20:12,332 --> 00:20:15,754
那他 我的那個角色

502
00:20:15,754 --> 00:20:18,855
他的碰撞結構應該就會對到

503
00:20:18,855 --> 00:20:21,357
對到我到時候給他三個月的照片

504
00:20:21,357 --> 00:20:23,178
那個位置

505
00:20:23,178 --> 00:20:23,818
的確是這樣

506
00:20:23,818 --> 00:20:26,620
所以就是我大部分花的時間

507
00:20:26,620 --> 00:20:30,942
都是花在想一些怎麼樣讓他變得更簡單一點而已

508
00:20:30,942 --> 00:20:32,163
所以呢

509
00:20:32,163 --> 00:20:34,364
最後的場景就是只是長這樣

510
00:20:34,364 --> 00:20:35,345
七顆球

511
00:20:35,345 --> 00:20:37,426
然後場景裡面什麼都沒有

512
00:20:37,426 --> 00:20:39,607
所以可以跑得非常高效率

513
00:20:39,607 --> 00:20:40,748
就變成說手機你可以

514
00:20:40,748 --> 00:20:41,568
假設你今天是做

515
00:20:42,750 --> 00:20:45,910
室內裝潢好了,就可以變成說可以用手機

516
00:20:45,910 --> 00:20:48,431
可是是很漂亮的畫面

517
00:20:48,431 --> 00:20:52,032
當然它限制也是很多,你必須要去解決

518
00:20:52,032 --> 00:20:55,612
那在這裡我有遇到一些困難

519
00:20:55,612 --> 00:21:01,733
就是我們本身其實Unity有提供一個Panoramic這個Shader

520
00:21:01,733 --> 00:21:04,434
這個Shader可以發360照片

521
00:21:04,434 --> 00:21:07,875
然後,但是它不能做Chroma Key

522
00:21:08,349 --> 00:21:09,929
比如說你要自己去拿另外一個

523
00:21:09,929 --> 00:21:13,230
所以是Quality另外一個shader

524
00:21:13,230 --> 00:21:15,071
但是這個360是一個shader

525
00:21:15,071 --> 00:21:20,653
所以我就很厚顏無恥的寫信給Kindle

526
00:21:20,653 --> 00:21:21,233
我跟他講說

527
00:21:21,233 --> 00:21:25,315
他已經有很多Key的那個shader

528
00:21:25,315 --> 00:21:29,056
可不可以幫我加到這個shader裡面

529
00:21:29,056 --> 00:21:30,377
然後等了一個禮拜他沒回我

530
00:21:38,091 --> 00:21:39,692
不小心就把它弄出來了

531
00:21:39,692 --> 00:21:40,872
我就回信給他說

532
00:21:40,872 --> 00:21:41,952
我弄好了

533
00:21:41,952 --> 00:21:42,793
他就立馬回我說

534
00:21:42,793 --> 00:21:45,133
Awesome

535
00:21:45,133 --> 00:21:53,536
好吧 我算了

536
00:21:53,536 --> 00:21:54,677
所以是挺有趣的

537
00:21:54,677 --> 00:21:55,817
然後

538
00:21:55,817 --> 00:21:56,877
這個Share的等於是說

539
00:21:56,877 --> 00:21:58,298
我把兩個Share綁在一起

540
00:21:58,298 --> 00:22:00,359
可以8360又可以Ping

541
00:22:00,359 --> 00:22:02,199
所以就拿來作為前景用

542
00:22:02,199 --> 00:22:03,560
但是因為我本身

543
00:22:03,560 --> 00:22:04,760
Coding能力不是很好

544
00:22:04,760 --> 00:22:05,160
所以其實

545
00:22:05,160 --> 00:22:06,661
可以Share

546
00:22:06,661 --> 00:22:07,041
我覺得還蠻有趣的

547
00:22:10,412 --> 00:22:12,513
照片本身是可以

548
00:22:12,513 --> 00:22:15,833
就是你這個 Skybox 的照片是可以存有 Alpha 的照片

549
00:22:15,833 --> 00:22:19,054
那你現在還是用 Chroma Key 去做

550
00:22:19,054 --> 00:22:19,634
對 應該這麼說吧

551
00:22:19,634 --> 00:22:24,335
影片格式可以有支援 Alpha對

552
00:22:24,335 --> 00:22:28,016
但是這個影片格式支援 Alpha 的時候呢

553
00:22:28,016 --> 00:22:31,677
它進來的那個 Shader 一樣要

554
00:22:31,677 --> 00:22:32,437
額外去寫一個

555
00:22:32,437 --> 00:22:34,698
去把 Alpha 除掉的 Shader

556
00:22:34,698 --> 00:22:36,958
也就是說你可以基於這個 Shader 再去加

557
00:22:36,958 --> 00:22:39,679
看你要加 Chroma Key 還是要加 Alpha Key兩種

558
00:22:40,281 --> 00:22:44,343
那因為這個Shader也是好像2018才開始

559
00:22:44,343 --> 00:22:45,583
才突然多出來

560
00:22:45,583 --> 00:22:48,344
原本只有Skybox Qubec

561
00:22:48,344 --> 00:22:49,025
這個也是新的

562
00:22:49,025 --> 00:22:50,946
所以我有問那個開發者

563
00:22:50,946 --> 00:22:52,126
他說還沒有加

564
00:22:52,126 --> 00:22:53,747
下次以後可以考慮

565
00:22:53,747 --> 00:22:56,308
因為從來沒有人有這個需求

566
00:22:56,308 --> 00:22:58,209
只是現在大部分都是有需求

567
00:22:58,209 --> 00:23:00,269
就是把360貼上去就好了

568
00:23:00,269 --> 00:23:03,051
還沒有需求說你要做前後級

569
00:23:03,051 --> 00:23:03,671
所以我就是等一下

570
00:23:05,817 --> 00:23:07,518
那這個遮擋就比較簡單一點

571
00:23:07,518 --> 00:23:10,239
因為影片的格式它沒有alpha

572
00:23:10,239 --> 00:23:11,700
但是照片可以

573
00:23:11,700 --> 00:23:13,040
所以照片可以用alpha

574
00:23:13,040 --> 00:23:14,921
但是因為我影片已經寫完那些的

575
00:23:14,921 --> 00:23:18,002
所以我就不用alpha 我就一樣用顏色

576
00:23:18,002 --> 00:23:20,883
意思都是一樣

577
00:23:20,883 --> 00:23:21,764
邏輯也是一樣

578
00:23:21,764 --> 00:23:24,365
就是我先把所有

579
00:23:24,365 --> 00:23:26,145
我要可能我走過去的時候

580
00:23:26,145 --> 00:23:27,146
會被它遮到的

581
00:23:27,146 --> 00:23:28,426
通通把它標到另外一層

582
00:23:28,426 --> 00:23:30,607
然後把它拍起來

583
00:23:30,607 --> 00:23:33,768
拍起來之後再貼回去

584
00:23:33,768 --> 00:23:35,569
就有點橘色的框

585
00:23:36,486 --> 00:23:39,327
這個時候有兩種做法

586
00:23:39,327 --> 00:23:41,488
因為這跟剛剛的video不一樣

587
00:23:41,488 --> 00:23:43,729
video從頭到尾就一顆球而已

588
00:23:43,729 --> 00:23:46,550
所以它不會有球跟球之間互相干擾

589
00:23:46,550 --> 00:23:48,030
但是這種的話

590
00:23:48,030 --> 00:23:50,171
我做到這種程度的時候

591
00:23:50,171 --> 00:23:51,331
這一顆球

592
00:23:51,331 --> 00:23:52,332
我進到這個球的時候

593
00:23:52,332 --> 00:23:54,473
我會看到遠遠的一顆球

594
00:23:54,473 --> 00:23:54,913
在那邊

595
00:23:54,913 --> 00:23:58,874
因為我的render queue可能排比較前面

596
00:23:58,874 --> 00:24:02,155
但是這個order的問題就變得很麻煩

597
00:24:02,155 --> 00:24:03,976
所以我最後的處理

598
00:24:03,976 --> 00:24:05,337
本來我是把球拉很大

599
00:24:06,023 --> 00:24:10,204
所以我走到前景跟背景只是scale的值不一樣

600
00:24:10,204 --> 00:24:12,705
等於是Z軸的位置不一樣

601
00:24:12,705 --> 00:24:15,626
但是很多顆球排在一起就會干擾

602
00:24:15,626 --> 00:24:17,387
所以我後來最後解決方式

603
00:24:17,387 --> 00:24:19,708
我把所有球都縮到剛剛那麼小

604
00:24:19,708 --> 00:24:20,748
就是只有包住鏡頭而已

605
00:24:20,748 --> 00:24:23,129
然後用render queue

606
00:24:23,129 --> 00:24:26,150
用程式去判斷說我現在站哪一隻鏡頭

607
00:24:26,150 --> 00:24:30,072
然後把那一隻鏡頭所屬的前景跟後景

608
00:24:30,072 --> 00:24:31,852
排在人的前後面

609
00:24:31,852 --> 00:24:33,033
其他的房間的

610
00:24:33,749 --> 00:24:37,672
那些Temperature通通把它甩到最後面去

611
00:24:37,672 --> 00:24:39,213
這樣子的話就不會互相干擾

612
00:24:39,213 --> 00:24:42,516
然後輸入也是蠻OK的

613
00:24:42,516 --> 00:24:44,758
所以你看它其實Alpha

614
00:24:44,758 --> 00:24:49,402
如果本身拍出來你的那個Solid Color是單色的話

615
00:24:49,402 --> 00:24:51,704
它其實會幫你先存Alpha

616
00:24:51,704 --> 00:24:53,846
然後你就可以拿來用

617
00:24:53,846 --> 00:24:55,387
然後一定要4096才會比較漂亮一點

618
00:24:55,387 --> 00:24:59,071
所以我拍出來感覺是這樣

619
00:24:59,071 --> 00:25:00,952
再包回原球然後就可以了

620
00:25:02,882 --> 00:25:04,463
然後轉的時候是沒問題的

621
00:25:04,463 --> 00:25:06,244
但是不能移動

622
00:25:06,244 --> 00:25:11,786
不能移動

623
00:25:11,786 --> 00:25:12,646
這個原理是這樣子

624
00:25:12,646 --> 00:25:14,027
就是

625
00:25:14,027 --> 00:25:17,309
我從做這個專案我才去

626
00:25:17,309 --> 00:25:19,570
就是爬到一些資料才知道說

627
00:25:19,570 --> 00:25:23,971
原來人的眼睛沒辦法辨識深度

628
00:25:23,971 --> 00:25:27,073
就是人的眼睛對深度是沒辦法感知的

629
00:25:27,073 --> 00:25:28,513
但是兩眼看出去的時候

630
00:25:28,513 --> 00:25:30,874
因為兩眼的距離有點誤差

631
00:25:30,874 --> 00:25:30,894
1.545度

632
00:25:33,840 --> 00:25:37,142
它在那個兩眼之間的

633
00:25:37,142 --> 00:25:39,124
送到你腦袋裡面那個畫面

634
00:25:39,124 --> 00:25:40,384
因為經驗的法則

635
00:25:40,384 --> 00:25:42,946
就是你會覺得說這個椅子可能大小多少

636
00:25:42,946 --> 00:25:44,007
所以它距離有多遠

637
00:25:44,007 --> 00:25:45,548
用經驗法則來判斷

638
00:25:45,548 --> 00:25:51,451
所以其實它那個文件上的說明是說

639
00:25:51,451 --> 00:25:52,912
人的眼睛是這樣

640
00:25:52,912 --> 00:25:54,713
現在空間是有深度的

641
00:25:54,713 --> 00:25:58,216
但是最後投影到你的視網膜的時候

642
00:25:58,216 --> 00:25:59,757
它會被點屏化

643
00:25:59,757 --> 00:26:00,577
就好像螢幕一樣

644
00:26:01,653 --> 00:26:04,194
這個時候3D在模型的時候是有深度的

645
00:26:04,194 --> 00:26:06,516
但是它最後算到螢幕空間的時候

646
00:26:06,516 --> 00:26:08,196
它會把它扁平化

647
00:26:08,196 --> 00:26:09,217
這個時候

648
00:26:09,217 --> 00:26:11,418
因為它對你來講只是一張紙

649
00:26:11,418 --> 00:26:12,719
但它沒有在動

650
00:26:12,719 --> 00:26:13,299
所以呢

651
00:26:13,299 --> 00:26:15,080
它就會變成

652
00:26:15,080 --> 00:26:19,542
你沒辦法去辨識說它的那個深度是如何

653
00:26:19,542 --> 00:26:19,823
所以

654
00:26:19,823 --> 00:26:20,223
簡單來說就是

655
00:26:20,223 --> 00:26:23,244
我現在對我的這個

656
00:26:23,244 --> 00:26:25,306
客廳這個球

657
00:26:25,306 --> 00:26:26,006
我現在在看

658
00:26:26,006 --> 00:26:28,167
我現在站在這個球裡面對不對

659
00:26:28,167 --> 00:26:30,128
如果我對它

660
00:26:30,128 --> 00:26:30,708
我可以辨識說法

661
00:26:31,229 --> 00:26:36,073
你會發現 GameViews 其實都變不出來

662
00:26:36,073 --> 00:26:38,754
因為它是有點像是放射性的縮放

663
00:26:38,754 --> 00:26:41,937
所以你的眼睛對你來講

664
00:26:41,937 --> 00:26:45,399
它的深度改變可是你感覺不出來

665
00:26:45,399 --> 00:26:49,102
所以你就會變成是你不知道它 size 是多少

666
00:26:49,102 --> 00:26:51,343
但是對你來講都是一樣的

667
00:26:51,343 --> 00:26:53,225
那用這個原理就會變成說

668
00:26:53,225 --> 00:26:55,967
假如我今天我的圖層有100層

669
00:26:55,967 --> 00:26:58,208
我就可以全部疊成不同的球

670
00:26:59,025 --> 00:27:00,746
可是最後算到螢幕空間的時候

671
00:27:00,746 --> 00:27:02,186
你感覺不出來

672
00:27:02,186 --> 00:27:03,506
對你來說就是一層而已

673
00:27:03,506 --> 00:27:06,187
那你就可以疊非常多不同的遮罩

674
00:27:06,187 --> 00:27:08,248
你可能因為距離的不同

675
00:27:08,248 --> 00:27:10,188
你要人走到哪裡的時候

676
00:27:10,188 --> 00:27:10,848
這個時候可以遮

677
00:27:10,848 --> 00:27:12,109
那個時候不可以遮

678
00:27:12,109 --> 00:27:14,709
的時候你可以用不同的圖來遮

679
00:27:14,709 --> 00:27:17,350
然後你把它全部疊成圓球

680
00:27:17,350 --> 00:27:18,210
疊成一百

681
00:27:18,210 --> 00:27:19,150
就看效能

682
00:27:19,150 --> 00:27:21,131
所以原理上是絕對沒有問題的

683
00:27:21,131 --> 00:27:23,552
就是你可以疊非常非常多層

684
00:27:23,552 --> 00:27:27,513
來做這件事情

685
00:27:27,513 --> 00:27:28,433
這是那個原理的圖

686
00:27:30,300 --> 00:27:33,921
這好多好多網路上的文獻可以看

687
00:27:33,921 --> 00:27:36,882
還蠻有趣的

688
00:27:36,882 --> 00:27:39,744
那因為有球那麼小

689
00:27:39,744 --> 00:27:41,424
人一定是在球的外面

690
00:27:41,424 --> 00:27:42,445
所以呢

691
00:27:42,445 --> 00:27:43,945
我就是用一個動態的腳本來判斷現在的

692
00:27:43,945 --> 00:27:47,527
Virtual Camera是哪一支

693
00:27:47,527 --> 00:27:48,767
然後去把René Q

694
00:27:48,767 --> 00:27:51,809
René Q是負責渲染前後的嘛

695
00:27:51,809 --> 00:27:53,369
我就把它調整起來

696
00:27:53,369 --> 00:27:54,510
就變成說

697
00:27:54,510 --> 00:27:56,471
當我進到這個房間的時候呢

698
00:27:56,471 --> 00:27:58,591
確保這個房間的前景後景一定夾著這個

699
00:27:59,111 --> 00:28:01,912
然後其他的絕對是在後面

700
00:28:01,912 --> 00:28:02,712
這樣才不會互相干擾

701
00:28:02,712 --> 00:28:08,034
然後陰影就是剛剛提到的

702
00:28:08,034 --> 00:28:09,494
陰影的做法其實

703
00:28:09,494 --> 00:28:12,195
如果在座各位有做AR的話

704
00:28:12,195 --> 00:28:14,936
其實這個也是很適合AR

705
00:28:14,936 --> 00:28:17,936
因為地板沒有實際的地板

706
00:28:17,936 --> 00:28:19,597
沒有實際的地板就沒辦法去

707
00:28:19,597 --> 00:28:22,978
實際上去算出那個實際的陰影

708
00:28:22,978 --> 00:28:24,138
所以呢 它的做法就是說

709
00:28:31,127 --> 00:28:33,228
這個地板拿來key

710
00:28:33,228 --> 00:28:34,689
所以

711
00:28:34,689 --> 00:28:35,789
如果沒有key之前

712
00:28:35,789 --> 00:28:35,949
它其實長這樣

713
00:28:35,949 --> 00:28:40,192
所以shader會打在這個上面

714
00:28:40,192 --> 00:28:42,613
就是完全沒有問題

715
00:28:42,613 --> 00:28:45,394
然後我把那個shader

716
00:28:45,394 --> 00:28:49,437
把陰影以外的部分通通key掉

717
00:28:49,437 --> 00:28:51,478
它就變得非常自然

718
00:28:51,478 --> 00:28:52,859
所以如果你是AR的話呢

719
00:28:52,859 --> 00:28:55,080
其實它這個原理也是適用

720
00:28:55,080 --> 00:28:56,921
但是它這個陰影

721
00:28:56,921 --> 00:28:57,601
剛剛提到就是說

722
00:28:57,601 --> 00:28:59,242
它不會爬牆

723
00:28:59,242 --> 00:29:00,162
所以如果你要爬牆的話呢

724
00:29:01,461 --> 00:29:02,501
你要做額外的處理

725
00:29:02,501 --> 00:29:03,802
就是實際上到那邊的時候

726
00:29:03,802 --> 00:29:06,944
你的確要把某部分的

727
00:29:06,944 --> 00:29:11,046
比如說假的這種

728
00:29:11,046 --> 00:29:12,126
也是一樣做key的原理

729
00:29:12,126 --> 00:29:14,827
可是實際上要有一個box在那邊

730
00:29:14,827 --> 00:29:16,308
要有一個牆壁在那邊

731
00:29:16,308 --> 00:29:18,049
然後讓它去打

732
00:29:18,049 --> 00:29:19,590
所以要看需求

733
00:29:19,590 --> 00:29:22,671
然後我做到這邊的時候

734
00:29:22,671 --> 00:29:24,092
其實就是剩下這個

735
00:29:24,092 --> 00:29:27,654
就是我一直想要讓它把那個光

736
00:29:27,654 --> 00:29:29,955
要有投射到人物身上

737
00:29:30,758 --> 00:29:32,079
最後一個關卡

738
00:29:32,079 --> 00:29:33,741
然後一直搞了很久

739
00:29:33,741 --> 00:29:35,802
就是打了很多不同的光

740
00:29:35,802 --> 00:29:38,445
所以我找到一個非常簡單的方法

741
00:29:38,445 --> 00:29:40,767
就是超級無敵簡單

742
00:29:40,767 --> 00:29:43,129
因為它本身是一個360照片嘛

743
00:29:43,129 --> 00:29:44,690
所以這360照片

744
00:29:44,690 --> 00:29:46,812
我等於是說我把它拿來當作

745
00:29:46,812 --> 00:29:48,474
作為光源

746
00:29:48,474 --> 00:29:49,855
就可以直接使用

747
00:29:49,855 --> 00:29:51,176
所以我的做法就是把這一張貼圖

748
00:29:51,176 --> 00:29:54,199
直接把它複製另外一份

749
00:29:54,199 --> 00:29:55,920
但是我把它的那個TipToe Type

750
00:29:55,920 --> 00:29:56,521
改為Cookie

751
00:29:59,970 --> 00:30:04,593
所以等於是說我如果在球星打一盞port light之後

752
00:30:04,593 --> 00:30:06,314
我把這個cookie貼上去

753
00:30:06,314 --> 00:30:10,936
它就好比幫我打一模一樣的光打出去

754
00:30:10,936 --> 00:30:14,178
所以我的那個alpha的來源

755
00:30:14,178 --> 00:30:17,521
就是以這張圖的灰階值來當作alpha來源

756
00:30:17,521 --> 00:30:20,342
所以你可以把不要的地方用Foreshot把它清掉

757
00:30:20,342 --> 00:30:24,565
但是打完之後它就可以做到就是

758
00:30:24,565 --> 00:30:26,686
實際上你走到那裡的時候它就會有

759
00:30:26,686 --> 00:30:28,307
真的有一層cookie打上去

760
00:30:29,545 --> 00:30:33,888
就像那個窗戶的光就好像真的有打在人身上那樣子對對對

761
00:30:33,888 --> 00:30:36,030
所以在這個前提之下就是可以

762
00:30:36,030 --> 00:30:38,051
可以八成還原

763
00:30:38,051 --> 00:30:40,272
還原就是實際上3D建模的感覺

764
00:30:40,272 --> 00:30:43,975
所以假設說你今天是希望要有

765
00:30:43,975 --> 00:30:45,856
日出日落的感覺

766
00:30:45,856 --> 00:30:47,577
你甚至可以變成說

767
00:30:47,577 --> 00:30:50,499
完全不要3D模型的情況下是

768
00:30:50,499 --> 00:30:52,160
前景一張圖

769
00:30:52,160 --> 00:30:53,822
第一個場景是白天

770
00:30:53,822 --> 00:30:56,483
然後中間錄一個日出日落的影片

771
00:30:57,185 --> 00:30:59,246
最後在一個日落的圖形 360

772
00:30:59,246 --> 00:31:00,226
所以是360 360 360

773
00:31:00,226 --> 00:31:01,046
但是影片

774
00:31:01,046 --> 00:31:03,087
Video影片

775
00:31:03,087 --> 00:31:04,367
然後做轉場

776
00:31:04,367 --> 00:31:05,348
也可以

777
00:31:05,348 --> 00:31:07,948
那等於是說等於是探

778
00:31:07,948 --> 00:31:08,849
繼續探討就是

779
00:31:08,849 --> 00:31:10,789
怎麼樣用這個流程讓

780
00:31:10,789 --> 00:31:13,490
整個開發是完全可以

781
00:31:13,490 --> 00:31:15,150
把Draw code降到最低

782
00:31:15,150 --> 00:31:17,671
其實這個有點像是

783
00:31:17,671 --> 00:31:18,351
應該開發者都知道啦

784
00:31:18,351 --> 00:31:19,391
就是你要

785
00:31:19,391 --> 00:31:20,772
你要自己刻

786
00:31:20,772 --> 00:31:22,692
用很

787
00:31:22,692 --> 00:31:23,253
刻苦的技術

788
00:31:23,253 --> 00:31:25,493
可是可以還原出別人

789
00:31:25,493 --> 00:31:26,413
沒辦法達到的境界

790
00:31:27,303 --> 00:31:30,405
還是你還是用電腦來算

791
00:31:30,405 --> 00:31:32,386
有一些那種很厲害的工程師

792
00:31:32,386 --> 00:31:35,088
他會自己去想辦法去做一些處理

793
00:31:35,088 --> 00:31:36,609
有點像是這樣

794
00:31:36,609 --> 00:31:37,930
那這裡的話呢

795
00:31:37,930 --> 00:31:39,151
還有很多必須要注意的

796
00:31:39,151 --> 00:31:40,532
比如說

797
00:31:40,532 --> 00:31:41,012
轉場的時候呢

798
00:31:41,012 --> 00:31:42,853
其實我的鏡頭

799
00:31:42,853 --> 00:31:45,075
我的鏡頭是做得比較安全

800
00:31:45,075 --> 00:31:45,895
但是呢

801
00:31:45,895 --> 00:31:46,776
如果你做不安全的話

802
00:31:46,776 --> 00:31:48,497
就很容易發出破綻

803
00:31:48,497 --> 00:31:49,698
有沒有看到

804
00:31:49,698 --> 00:31:50,538
剛剛其實

805
00:31:50,538 --> 00:31:53,020
如果鏡頭早一點切的話呢

806
00:31:53,020 --> 00:31:54,181
就不會看到

807
00:31:54,181 --> 00:31:54,441
比如說像這裡

808
00:31:55,581 --> 00:31:58,203
這個的話 因為我有另外一層前景

809
00:31:58,203 --> 00:32:01,145
所以它可以做到就是把人擋在那邊

810
00:32:01,145 --> 00:32:03,987
但實際上如果我沒有處理的話

811
00:32:03,987 --> 00:32:05,288
有些地方它就會怪怪的

812
00:32:05,288 --> 00:32:07,610
比如說這裡我就必須要把陰影切掉

813
00:32:07,610 --> 00:32:10,472
然後這邊可能有個門 我不能讓他走進去

814
00:32:10,472 --> 00:32:12,013
所以這個時候有幾種做法

815
00:32:12,013 --> 00:32:13,934
要嘛就是要有一張前景圖

816
00:32:13,934 --> 00:32:17,456
要嘛就是你把collider把它放大一點點

817
00:32:17,456 --> 00:32:19,078
讓他走不進去

818
00:32:19,078 --> 00:32:22,040
就是在邊緣的地方會比較需要小心一點

819
00:32:22,040 --> 00:32:23,661
但是一旦處理好之後

820
00:32:25,047 --> 00:32:28,469
它的效果其實是還可以接受的

821
00:32:28,469 --> 00:32:30,250
然後呢反射的部分呢

822
00:32:30,250 --> 00:32:32,692
應該我回去會繼續做這個

823
00:32:32,692 --> 00:32:35,493
其實還是這張360還是存在的

824
00:32:35,493 --> 00:32:37,354
但是我前面疊一個

825
00:32:37,354 --> 00:32:40,636
一層專門處理它反射的

826
00:32:40,636 --> 00:32:41,937
也是可以的

827
00:32:41,937 --> 00:32:43,458
所以還是能做

828
00:32:43,458 --> 00:32:44,798
只是說

829
00:32:44,798 --> 00:32:46,439
本來可能按幾個按鈕都處理好

830
00:32:46,439 --> 00:32:49,061
但是你消耗的代價就是你的硬體

831
00:32:49,061 --> 00:32:50,502
那如果你要用這種做法的話

832
00:32:50,502 --> 00:32:51,702
你必須要有一些巧思

833
00:32:51,702 --> 00:32:53,803
去處理一些莫名其妙的

834
00:32:54,733 --> 00:32:58,596
破綻

835
00:32:58,596 --> 00:33:09,144
大家可以做到這樣

836
00:33:09,144 --> 00:33:09,284
好

837
00:33:09,284 --> 00:33:10,445
這是剛剛那個光

838
00:33:10,445 --> 00:33:11,806
實際上

839
00:33:11,806 --> 00:33:12,266
這個還蠻有用的

840
00:33:12,266 --> 00:33:14,288
尤其是你如果有一些光

841
00:33:14,288 --> 00:33:15,829
甚至是會動的光

842
00:33:15,829 --> 00:33:17,470
就變成是影片

843
00:33:17,470 --> 00:33:19,251
然後呢我們跟一些

844
00:33:20,549 --> 00:33:22,990
因為我帶去Unite嘛

845
00:33:22,990 --> 00:33:25,530
所以有遇到一些開發者聊這個

846
00:33:25,530 --> 00:33:27,311
最後他們有想到就是說

847
00:33:27,311 --> 00:33:31,512
其實他們的整個過程還是他們原來的製程

848
00:33:31,512 --> 00:33:32,932
不會花太多時間

849
00:33:32,932 --> 00:33:36,953
但是在可能原本要做一些Cutscene的場景

850
00:33:36,953 --> 00:33:38,774
因為做一些過場動畫

851
00:33:38,774 --> 00:33:41,855
他們還是蠻希望像3A遊戲那種

852
00:33:41,855 --> 00:33:43,535
場景非常漂亮之外

853
00:33:43,535 --> 00:33:45,836
衣服還是要穿當下的衣服

854
00:33:45,836 --> 00:33:46,676
就是有Alpha卡的衣服

855
00:33:50,604 --> 00:33:52,585
就會變得很可惜 尤其手機

856
00:33:52,585 --> 00:33:54,586
但是變成說他現在想到一個說

857
00:33:54,586 --> 00:33:55,047
欸我的過場動畫

858
00:33:55,047 --> 00:33:57,648
我把我的背景全部換成360

859
00:33:57,648 --> 00:34:00,130
可是我的主角還是我的主角

860
00:34:00,130 --> 00:34:02,231
這樣就變得可以 過場很漂亮

861
00:34:02,231 --> 00:34:04,653
然後主角是手機 手挖還是可以進去 買個衣服

862
00:34:04,653 --> 00:34:06,214
對 手挖可以吃

863
00:34:06,214 --> 00:34:08,195
啊 你只要確保一件事情就是

864
00:34:08,195 --> 00:34:10,537
鏡頭不要動就好 甚至那變成一張圖而已

865
00:34:10,537 --> 00:34:11,918
因為他沒有要video

866
00:34:11,918 --> 00:34:15,040
他不用運鏡 如果真的要講話就是

867
00:34:15,040 --> 00:34:16,440
鏡頭卡在某一個主角上面

868
00:34:16,440 --> 00:34:17,981
他講完之後再靠另外一個

869
00:34:18,544 --> 00:34:20,845
SIM 然後就變成是直接跳過去

870
00:34:20,845 --> 00:34:24,166
直接跳過去的話照片就是換照片而已

871
00:34:24,166 --> 00:34:26,106
所以你等於是說

872
00:34:26,106 --> 00:34:27,747
這個過場有幾個Cup

873
00:34:27,747 --> 00:34:28,967
就幾張照片

874
00:34:28,967 --> 00:34:30,568
所以相對來講是很省

875
00:34:30,568 --> 00:34:34,069
然後現在這個你看到這個的Size大概就是

876
00:34:34,069 --> 00:34:35,629
解開是24

877
00:34:35,629 --> 00:34:37,650
那其實硬碟是9MB

878
00:34:37,650 --> 00:34:41,071
然後如果在NAND裡面壓縮是4MB

879
00:34:41,071 --> 00:34:43,872
就是一張圖的話大概4MB左右

880
00:34:43,872 --> 00:34:44,792
所以還是不錯的

881
00:34:44,792 --> 00:34:45,452
是4096的圖4096

882
00:34:49,910 --> 00:34:56,275
我用Video的時候,2048太糊了,因為它會動,所以句子很明顯

883
00:34:56,275 --> 00:35:00,738
所以如果是Video的話,基本上4096我覺得是標配

884
00:35:00,738 --> 00:35:05,102
但是手機可能要看型號,螢幕Size不一樣

885
00:35:05,102 --> 00:35:10,326
我用電腦來畫來看,如果是照片的話呢,2048跟4096都差不多

886
00:35:10,326 --> 00:35:11,126
但是如果是8192就有點...

887
00:35:13,719 --> 00:35:17,881
看不出來差別,但是硬碟又佔用很多

888
00:35:17,881 --> 00:35:20,982
所以4096測起來感覺是蠻OK的

889
00:35:20,982 --> 00:35:22,683
蠻OK的標準

890
00:35:22,683 --> 00:35:25,564
然後我的鏡頭就是用內建的CineMachine

891
00:35:25,564 --> 00:35:27,705
它有一個功能就是會放你自動切來切去

892
00:35:27,705 --> 00:35:28,545
很方便

893
00:35:28,545 --> 00:35:31,387
就是你擺六支鏡頭,它全部指向你的目標

894
00:35:31,387 --> 00:35:34,988
然後它被Kleiner擋住之後,它就不切了

895
00:35:34,988 --> 00:35:37,829
所以這六支鏡頭只會有一支鏡頭被切到

896
00:35:37,829 --> 00:35:40,010
它會自動去判斷

897
00:35:40,010 --> 00:35:41,191
那如果你想要影響它的

898
00:35:41,796 --> 00:35:45,597
那個 Policy 你就可以自己去設定或改

899
00:35:45,597 --> 00:35:46,697
是可以的

900
00:35:46,697 --> 00:35:48,238
那我在製作的時候呢

901
00:35:48,238 --> 00:35:50,639
我把那個 Lookit 放到頭

902
00:35:50,639 --> 00:35:53,239
那個我的 Eason 的頭上

903
00:35:53,239 --> 00:35:54,940
所以它待機的時候會晃

904
00:35:54,940 --> 00:35:57,041
然後鏡頭這邊切來切去

905
00:35:57,041 --> 00:36:01,402
所以後來我就把它另外拉出一個 KineObject

906
00:36:01,402 --> 00:36:06,043
不會晃 才比較 OK

907
00:36:06,043 --> 00:36:08,204
如果你有字 從裡面往外看

908
00:36:08,204 --> 00:36:10,244
那你要注意就是

909
00:36:10,244 --> 00:36:10,785
360 包起來之後

910
00:36:11,574 --> 00:36:13,294
從裡面往外看字會反過來

911
00:36:13,294 --> 00:36:15,295
所以你必須要在你匯入的時候

912
00:36:15,295 --> 00:36:16,735
要把它水平翻轉

913
00:36:16,735 --> 00:36:20,716
水平翻轉就代表你整個場景就是水平翻轉

914
00:36:20,716 --> 00:36:22,257
全部水平翻轉

915
00:36:22,257 --> 00:36:24,057
要嘛就是把字獨立出來另外做

916
00:36:24,057 --> 00:36:25,518
大概這幾種類型是滿適合的

917
00:36:25,518 --> 00:36:30,299
簡單來說就是鏡頭不要動

918
00:36:30,299 --> 00:36:31,499
鏡頭不要動的遊戲可以做這件事

919
00:36:42,013 --> 00:36:44,776
好

920
00:36:44,776 --> 00:36:46,317
我有濃縮一點

921
00:36:46,317 --> 00:36:47,858
因為我想說

922
00:36:47,858 --> 00:36:51,301
開發者應該不需要講那麼囉嗦的東西

923
00:36:51,301 --> 00:36:53,402
好 那我們感謝柯文帶來的這個精彩的介紹

924
00:37:13,519 --> 00:37:17,820
我現在有實際上有放出來嗎?

925
00:37:17,820 --> 00:37:18,541
專案檔

926
00:37:18,541 --> 00:37:20,061
我放在我們的GitHub

927
00:37:20,061 --> 00:37:22,482
可是那GitHub內部

928
00:37:22,482 --> 00:37:26,723
我在另外放一份出來

929
00:37:26,723 --> 00:37:27,944
說實在就是

930
00:37:27,944 --> 00:37:30,084
之前在還沒有真的辦法做那種

931
00:37:30,084 --> 00:37:32,565
高畫質的3D場景之前

932
00:37:32,565 --> 00:37:35,346
大部分那種PS時代的遊戲

933
00:37:35,346 --> 00:37:37,347
或甚至更早的一些

934
00:37:37,347 --> 00:37:39,748
譬如說超任時代比較晚期的遊戲

935
00:37:39,748 --> 00:37:40,288
很多那種

936
00:37:40,288 --> 00:37:42,328
對阿就是pre-render的畫面

937
00:37:42,969 --> 00:37:47,333
我就是當時就第一年就業的時候

938
00:37:47,333 --> 00:37:48,614
是在一個國安公司

939
00:37:48,614 --> 00:37:51,076
然後那個國安公司有效果機

940
00:37:51,076 --> 00:37:53,438
效果機就是兩個螢幕切來切去

941
00:37:53,438 --> 00:37:55,840
效果機 有兩個channel然後切來切去

942
00:37:55,840 --> 00:37:59,222
然後二老闆很自豪就很自豪把我找過去

943
00:37:59,222 --> 00:38:01,905
他有一張展開的地球

944
00:38:01,905 --> 00:38:03,666
地球的地圖

945
00:38:03,666 --> 00:38:06,168
一個四方形長方形的地球地圖

946
00:38:06,168 --> 00:38:07,970
然後他說你知道怎麼做地球可以轉嗎

947
00:38:07,970 --> 00:38:10,612
然後他就有一個效果

948
00:38:11,845 --> 00:38:13,806
從平面轉成圓球之後飛走

949
00:38:13,806 --> 00:38:16,427
然後他就把那個效果機推到一半就好

950
00:38:16,427 --> 00:38:19,229
推到一半就變成從平面轉成圓球還沒飛走

951
00:38:19,229 --> 00:38:21,970
然後他整個畫面就變成一個圓形

952
00:38:21,970 --> 00:38:25,793
然後就把那個地球的圖從左推到右

953
00:38:25,793 --> 00:38:27,053
他就在那邊轉

954
00:38:27,053 --> 00:38:28,774
我說哇好厲害喔

955
00:38:28,774 --> 00:38:30,095
好神奇喔

956
00:38:30,095 --> 00:38:31,076
怎麼辦到的

957
00:38:31,076 --> 00:38:34,377
他說這台五百萬而已

958
00:38:34,377 --> 00:38:34,778
哈哈哈

959
00:38:39,709 --> 00:38:41,390
早期的那種技術啊

960
00:38:41,390 --> 00:38:42,490
你會覺得非常有趣

961
00:38:42,490 --> 00:38:46,111
就是基於這種很特別的玩法

962
00:38:46,111 --> 00:38:47,112
就是為了要省效

963
00:38:59,890 --> 00:39:01,251
還是任何跟優惠題有關的問題

964
00:39:01,251 --> 00:39:02,753
你的優惠題生版本爆炸了

965
00:39:02,753 --> 00:39:05,975
趕快上線查詢 救援一下

966
00:39:05,975 --> 00:39:06,676
現在比較

967
00:39:06,676 --> 00:39:07,776
順便提一下就是

968
00:39:07,776 --> 00:39:09,618
現在那個360影片的播放

969
00:39:09,618 --> 00:39:12,500
應該還是要整個影片才能去播放

970
00:39:12,500 --> 00:39:13,321
兩個模式

971
00:39:13,321 --> 00:39:14,762
就是

972
00:39:14,762 --> 00:39:16,543
影片的話它有兩個模式

973
00:39:16,543 --> 00:39:18,464
一個模式是

974
00:39:18,464 --> 00:39:22,327
呃我看一下

975
00:39:22,327 --> 00:39:25,190
主要是針對手機的效能問題在想

976
00:39:25,190 --> 00:39:27,351
就是因為現在不是任何行為在研究類似

977
00:39:27,351 --> 00:39:28,612
像是把影片拆成多個

978
00:39:34,004 --> 00:39:39,265
然後他就只抓視野範圍內的三角形去做他的頂尖

979
00:39:39,265 --> 00:39:40,866
我還蠻期待那個技術

980
00:39:40,866 --> 00:39:43,446
目前有沒有打算要做這一塊

981
00:39:43,446 --> 00:39:47,127
應該是說我們一定等他們技術成熟之後用他們

982
00:39:47,127 --> 00:39:50,928
因為這種技術是像他們這種公司才有辦法研究出來

983
00:39:50,928 --> 00:39:52,948
我們其實裡面很多都是這樣

984
00:39:52,948 --> 00:39:57,089
就是不要自己去研究那種太可怕的未來技術

985
00:39:57,089 --> 00:39:58,289
AI也是啦

986
00:39:58,289 --> 00:39:59,590
我們的AI都是基於

987
00:40:00,574 --> 00:40:03,216
Google 或微軟他們的 AI 技術整合進來

988
00:40:03,216 --> 00:40:05,898
等於是我們是他們的

989
00:40:05,898 --> 00:40:06,958
跟開發者一個橋樑

990
00:40:06,958 --> 00:40:08,799
像 ARM 也是

991
00:40:08,799 --> 00:40:09,960
ARM 就是他們技術很好

992
00:40:09,960 --> 00:40:12,182
可是他們會跟我們講說

993
00:40:12,182 --> 00:40:13,082
他們問開發者

994
00:40:13,082 --> 00:40:14,943
開發者都沒辦法跟他們溝通

995
00:40:14,943 --> 00:40:16,724
因為他們的東西太深

996
00:40:16,724 --> 00:40:18,726
深到開發者沒辦法去處理

997
00:40:18,726 --> 00:40:20,087
但是開發者有問題會找我們

998
00:40:20,087 --> 00:40:21,948
所以我們會幫他跟 ARM 溝通

999
00:40:21,948 --> 00:40:22,868
所以這個也是一樣

1000
00:40:22,868 --> 00:40:25,450
所以你看現在的 Machine Learning

1001
00:40:25,450 --> 00:40:28,432
基本上如果還是原來那一套的話就太深了

1002
00:40:29,345 --> 00:40:30,926
還是得把它整合成為比較簡單的

1003
00:40:30,926 --> 00:40:31,986
所以我也在等

1004
00:40:31,986 --> 00:40:34,588
如果Google那個空間化的

1005
00:40:34,588 --> 00:40:36,949
360空間化的技術可以變成一個

1006
00:40:36,949 --> 00:40:37,930
我們可以整合的東西的話

1007
00:40:37,930 --> 00:40:41,352
我還蠻樂見Munity可以支援對

1008
00:40:41,352 --> 00:40:43,373
那你剛才的問題是

1009
00:40:43,373 --> 00:40:45,214
現在的那個影片

1010
00:40:45,214 --> 00:40:46,375
現在只有支援兩個模式

1011
00:40:46,375 --> 00:40:48,356
一個是要放進來

1012
00:40:48,356 --> 00:40:50,137
一個是可以用下載

1013
00:40:50,137 --> 00:40:50,697
就是變成HTML

1014
00:40:59,265 --> 00:41:02,887
所以不是我們所預期那種

1015
00:41:02,887 --> 00:41:03,828
必須要解決的事情

1016
00:41:03,828 --> 00:41:05,989
但是你可以變成是一個

1017
00:41:05,989 --> 00:41:06,409
讓玩家預載

1018
00:41:06,409 --> 00:41:09,070
就是可以用這個機制

1019
00:41:09,070 --> 00:41:11,051
那串流這件事情呢

1020
00:41:11,051 --> 00:41:15,113
我覺得應該也是到2019年初了

1021
00:41:15,113 --> 00:41:17,274
現在全部都在衝ECS

1022
00:41:17,274 --> 00:41:19,715
所以串流的部分我覺得不會那麼快

1023
00:41:24,278 --> 00:41:25,299
或就是因為

1024
00:41:25,299 --> 00:41:28,320
就是像我們在做360影片的話

1025
00:41:28,320 --> 00:41:29,601
就是一層就是4096

1026
00:41:29,601 --> 00:41:32,002
可是如果現在想要做前景後景

1027
00:41:32,002 --> 00:41:32,983
就是兩層就是4096乘以2

1028
00:41:32,983 --> 00:41:33,963
然後如果要做三層的話

1029
00:41:33,963 --> 00:41:35,244
就是一直再疊上去

1030
00:41:35,244 --> 00:41:38,305
就是手機它要去播這麼多的影片

1031
00:41:38,305 --> 00:41:39,546
是會不會很重

1032
00:41:39,546 --> 00:41:40,847
所以其實

1033
00:41:40,847 --> 00:41:44,528
其實我認為現在還不適合做大專案

1034
00:41:44,528 --> 00:41:46,649
但是比如說你去幫人家做一個

1035
00:41:46,649 --> 00:41:48,050
一個房間的那種專案

1036
00:41:48,050 --> 00:41:49,331
我覺得是可行

1037
00:41:49,331 --> 00:41:50,491
手機也可行

1038
00:41:50,491 --> 00:41:51,232
然後再來就是說

1039
00:41:57,544 --> 00:41:59,125
後來忘記了

1040
00:41:59,125 --> 00:42:00,345
有一個關鍵點

1041
00:42:00,345 --> 00:42:02,606
呵呵呵呵

1042
00:42:02,606 --> 00:42:03,166
忘記了

1043
00:42:03,166 --> 00:42:06,947
呵呵呵對

1044
00:42:06,947 --> 00:42:08,208
我想要再告訴你

1045
00:42:08,208 --> 00:42:09,068
好

1046
00:42:09,068 --> 00:42:10,528
想要再告訴你

1047
00:42:10,528 --> 00:42:11,269
就是能做

1048
00:42:11,269 --> 00:42:12,629
但是其實還是

1049
00:42:12,629 --> 00:42:14,009
還有蠻多限制的

1050
00:42:14,009 --> 00:42:15,990
但是撇開那些限制的話呢

1051
00:42:15,990 --> 00:42:17,991
可能要先有一些案例出來之後

1052
00:42:17,991 --> 00:42:21,032
後面的東西才會快一點

1053
00:42:21,032 --> 00:42:22,112
再來就是

1054
00:42:22,112 --> 00:42:23,432
如果錄影的時候做一些遮擋

1055
00:42:23,432 --> 00:42:24,913
應該也可以省下一些

1056
00:42:24,913 --> 00:42:26,033
喔對對我想起來了

1057
00:42:26,033 --> 00:42:26,253
就是這個

1058
00:42:27,130 --> 00:42:30,171
我嘗試著把360變成180

1059
00:42:30,171 --> 00:42:32,032
是是是,這就是問題

1060
00:42:32,032 --> 00:42:32,452
因為我想說

1061
00:42:32,452 --> 00:42:38,533
A片後面都黑的嘛,對不對

1062
00:42:38,533 --> 00:42:39,553
那理論上來講呢

1063
00:42:39,553 --> 00:42:40,874
我後面如果都黑的話

1064
00:42:40,874 --> 00:42:42,894
我應該可以省一半的空間嘛

1065
00:42:42,894 --> 00:42:45,595
但是我不知道是我的問題

1066
00:42:45,595 --> 00:42:47,235
還是真的是這樣

1067
00:42:47,235 --> 00:42:51,396
因為我的邏輯它應該要省一半

1068
00:42:51,396 --> 00:42:54,377
不過我就是把全部後面都把它變黑之後

1069
00:42:54,377 --> 00:42:54,497
我去紅

1070
00:42:55,870 --> 00:42:58,911
所以我有一個2048的

1071
00:42:58,911 --> 00:43:03,032
然後是1080的這個

1072
00:43:03,032 --> 00:43:05,092
他被我遮起來所以只有兩個顏色

1073
00:43:05,092 --> 00:43:06,233
黑色跟灰色

1074
00:43:06,233 --> 00:43:09,133
所以就我們對壓縮流程來講

1075
00:43:09,133 --> 00:43:12,234
同顏色應該會整個把它串在一起對不對

1076
00:43:12,234 --> 00:43:13,694
可是其實他還是

1077
00:43:13,694 --> 00:43:16,215
佔一樣的size

1078
00:43:16,215 --> 00:43:17,515
就是有360跟180

1079
00:43:17,515 --> 00:43:18,675
在這個錄完

1080
00:43:18,675 --> 00:43:21,796
錄完當下的時候size是一樣的

1081
00:43:21,796 --> 00:43:23,216
我不知道是因為沒壓縮還是怎麼樣

1082
00:43:26,632 --> 00:43:29,635
對 但是其實它就是個 MP4 啊

1083
00:43:29,635 --> 00:43:30,475
就是 MP4 沒有壓縮

1084
00:43:30,475 --> 00:43:33,118
有沒有辦法

1085
00:43:33,118 --> 00:43:34,939
在那個 Recorder 裡面沒有壓縮的這個選項

1086
00:43:34,939 --> 00:43:41,224
所以是不是有辦法是把它再經過第二層處理把它再壓縮好

1087
00:43:41,224 --> 00:43:43,226
它應該會再更小

1088
00:43:43,226 --> 00:43:45,327
所以那個 Alpha 層

1089
00:43:45,327 --> 00:43:47,689
就會小到一個極致才對

1090
00:43:47,689 --> 00:43:49,370
那就可以解決你的問題

1091
00:43:49,370 --> 00:43:51,232
但是我當下測到這邊的時候我就停止

1092
00:43:51,232 --> 00:43:53,754
我想說 好像不是我想的那樣

1093
00:43:53,754 --> 00:43:54,615
就算了 我先做別的

1094
00:43:55,150 --> 00:43:56,792
但是我有試,我的確想要解決這個問題

1095
00:43:56,792 --> 00:44:07,159
沒有想說要疊一百層喔

1096
00:44:07,159 --> 00:44:09,921
然後我接下來應該會做

1097
00:44:09,921 --> 00:44:11,062
剛剛提到的反射

1098
00:44:11,062 --> 00:44:13,284
然後我會做個DEMO給

1099
00:44:13,284 --> 00:44:14,665
博弈遊戲

1100
00:44:14,665 --> 00:44:16,406
基本上我的想法是

1101
00:44:16,406 --> 00:44:18,087
就是擺一堆機台,然後呢

1102
00:44:18,087 --> 00:44:21,590
前面那個是Slow Machine的機制

1103
00:44:21,590 --> 00:44:23,271
但是它是可以看到

1104
00:44:23,271 --> 00:44:24,231
其他機台在玩

1105
00:44:24,855 --> 00:44:26,497
切機台的時候是換一張照片

1106
00:44:26,497 --> 00:44:28,999
可是他感覺他換了一個座位

1107
00:44:28,999 --> 00:44:30,781
他剛剛的機台還在走路

1108
00:44:30,781 --> 00:44:32,682
其實很簡單嘛 就是照片門

1109
00:44:32,682 --> 00:44:33,983
看要不要做那個移動的流程

1110
00:44:33,983 --> 00:44:37,887
如果不做的話其實是換照片門

1111
00:44:37,887 --> 00:44:38,768
對於我們的客戶來講

1112
00:44:38,768 --> 00:44:41,650
可能他就是會變成是一個

1113
00:44:41,650 --> 00:44:43,932
突破他能做的畫面畫質

1114
00:44:43,932 --> 00:44:46,635
但是又桌扣又降的比之前

1115
00:44:46,635 --> 00:44:47,996
比他們預期還低的時候

1116
00:44:55,270 --> 00:44:59,191
我們的 Game Brain Team 非常興奮

1117
00:44:59,191 --> 00:45:00,971
所以我也蠻高興可以跟他們合作

1118
00:45:00,971 --> 00:45:02,412
目前是看到有那個 VR 的活力遊戲

1119
00:45:02,412 --> 00:45:05,433
是確實有在做 360 的影片的運用

1120
00:45:05,433 --> 00:45:08,394
只是他們沒有做前後景這種特色的使用對對對

1121
00:45:08,394 --> 00:45:09,734
就是其實他們

1122
00:45:09,734 --> 00:45:11,454
應該說做 360 也很多

1123
00:45:11,454 --> 00:45:13,175
但是就是說在

1124
00:45:13,175 --> 00:45:14,615
如果說這東西給他們看到

1125
00:45:14,615 --> 00:45:16,076
他們有些啟發的話

1126
00:45:16,076 --> 00:45:16,916
可能他會給我一些反饋

1127
00:45:16,916 --> 00:45:18,236
然後我就想到說

1128
00:45:18,236 --> 00:45:19,137
那如果他們這樣想

1129
00:45:19,137 --> 00:45:22,118
那就想一些其他新的東西

1130
00:45:22,118 --> 00:45:23,198
所以這種配合模式其實對我來講

1131
00:45:23,198 --> 00:45:23,518
也蠻有趣的

1132
00:45:25,490 --> 00:45:27,952
行之有年 其實各位可能不知道

1133
00:45:27,952 --> 00:45:31,735
就是我會幫某些遊戲公司去聊的時候

1134
00:45:31,735 --> 00:45:33,576
他們可能會想說 哪些東西他們還沒試過

1135
00:45:33,576 --> 00:45:36,058
那我就說 那我現在試試看

1136
00:45:36,058 --> 00:45:38,440
啊如果有結果我就給你

1137
00:45:38,440 --> 00:45:42,383
所以我去年吧 我跑去雷亞

1138
00:45:42,383 --> 00:45:44,104
幫他們做很多東西

1139
00:45:44,104 --> 00:45:48,507
然後呢 像這種流程對我來講我是滿開心的

1140
00:45:48,507 --> 00:45:49,628
因為我不太想要當個業務

1141
00:45:53,192 --> 00:45:55,174
不是說去你們公司只是為了要你們買

1142
00:45:55,174 --> 00:45:58,376
所以我就去你們公司

1143
00:45:58,376 --> 00:46:00,257
然後呢 我們來聊聊技術

1144
00:46:00,257 --> 00:46:01,778
然後呢 我幫你們弄點東西

1145
00:46:01,778 --> 00:46:03,739
如果你們有用 開心

1146
00:46:03,739 --> 00:46:05,520
沒有用也沒關係 對不對

1147
00:46:05,520 --> 00:46:06,801
所以我的那個

1148
00:46:06,801 --> 00:46:11,023
我的那個VIVE還在他們那邊

1149
00:46:11,023 --> 00:46:11,624
還忘去拿回來

1150
00:46:11,624 --> 00:46:12,704
對啊

1151
00:46:12,704 --> 00:46:14,545
就是我可以幫各位

1152
00:46:14,545 --> 00:46:15,946
如果各位太忙了

1153
00:46:15,946 --> 00:46:18,027
然後呢 如果任何希望說

1154
00:46:18,027 --> 00:46:19,648
我這邊可以幫你們一些事的

1155
00:46:19,648 --> 00:46:20,009
那你跟我說

1156
00:46:20,009 --> 00:46:21,470
如果覺得可行我就

1157
00:46:22,078 --> 00:46:24,399
我們就來試試看這種配合模式

1158
00:46:24,399 --> 00:46:25,359
因為我覺得蠻有趣的

1159
00:46:25,359 --> 00:46:25,639
對我來講

1160
00:46:25,639 --> 00:46:27,840
我也可以想想明年要講什麼

1161
00:46:27,840 --> 00:46:28,360
OK 謝謝

1162
00:46:28,360 --> 00:46:29,221
還有其他問題嗎

1163
00:46:29,221 --> 00:46:30,661
如果暫時沒有問題的話

1164
00:46:30,661 --> 00:46:33,242
我們就再次感謝Kevin

